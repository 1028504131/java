<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.auth.dao.UserInfoMapper">
  	<resultMap id="UserResultMap" type="com.ssm.auth.vo.UserInfo">
	    <id column="user_id" jdbcType="INTEGER" property="userId" />
	    <result column="group_id" jdbcType="INTEGER" property="groupId" />
	    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
	    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
	    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
	    <result column="user_type" jdbcType="INTEGER" property="userType" />
	    <result column="user_state" jdbcType="INTEGER" property="userState" />
	    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
	    <result column="create_by" jdbcType="INTEGER" property="createBy" />
	    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
	    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  	</resultMap>
  	
  	<resultMap id="UserAuthResultMap" type="com.ssm.auth.vo.AuthInfo">
		<id column="auth_id" jdbcType="INTEGER" property="authId" />
		<result column="parent_id" jdbcType="INTEGER"
			property="parentId" />
		<result column="auth_name" jdbcType="VARCHAR"
			property="authName" />
		<result column="auth_desc" jdbcType="VARCHAR"
			property="authDesc" />
		<result column="auth_grade" jdbcType="INTEGER"
			property="authGrade" />
		<result column="auth_type" jdbcType="INTEGER"
			property="authType" />
		<result column="auth_url" jdbcType="VARCHAR" property="authUrl" />
		<result column="auth_code" jdbcType="VARCHAR"
			property="authCode" />
		<result column="auth_order" jdbcType="INTEGER"
			property="authOrder" />
		<result column="auth_state" jdbcType="INTEGER"
			property="authState" />
		<result column="create_by" jdbcType="INTEGER"
			property="createBy" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="update_by" jdbcType="INTEGER"
			property="updateBy" />
		<result column="update_time" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>
  	
  	
  	<resultMap type="UserInfo" id="user-role-userGroup" extends="UserResultMap">
  		<association property="userGroup" javaType="UserGroup" >
  			<id column="group_id" jdbcType="INTEGER" property="groupId" />
    		<result column="group_name" jdbcType="VARCHAR" property="groupName" />
		    <result column="group_code" jdbcType="VARCHAR" property="groupCode" />
		    <result column="group_desc" jdbcType="VARCHAR" property="groupDesc" />
		    <result column="group_state" jdbcType="INTEGER" property="groupState" />
  		</association>
  		<association property="role" javaType="Role">
  			<id column="role_id" jdbcType="INTEGER" property="roleId" />
		    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
		    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
		    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
		    <result column="role_state" jdbcType="INTEGER" property="roleState" />
		    <result column="create_by" jdbcType="INTEGER" property="createBy" />
		    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
		    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  		</association>
  	</resultMap>
  	
  	<sql id="User_Column_List" >
    	user_id, group_id, nick_name, user_code, user_pwd, user_type, user_state, is_delete, 
    	create_by, create_time, update_by, update_time
  	</sql>
  	
  	<sql id="user_Where_Clause">
	  	<where>
	  		<if test="userId!=null">
	        	and user_id = #{useruserId}
	         </if>
	        <if test="userCode!=null">
	            and user_code=#{userCode}
	        </if>
	        <if test="userPwd!=null">
	            and user_pwd= MD5(#{userPwd})
	        </if>
	        <if test="createBy != null">
	        	create_by=#{createBy }
	        </if>
	        
		</where>
  	</sql>
  	
  	<sql id="page">
	  	<if test="user.userType != null">
	  		and user_type = #{user.userType}
	  	</if>
	  	<if test="user.userState != null">
	  		and user_State = #{user.userState}
	  	</if>
	  	<if test="user.userCode != null">
	  		and user_code like concat('%',#{user.userCode},'%')
	  	</if>
  	</sql>
  	
  	<sql id="allList">
  		<if test="userType != null">
	  		and user_type = #{userType}
	  	</if>
	  	<if test="userState != null">
	  		and user_State = #{userState}
	  	</if>
	  	<if test="userCode != null">
	  		and user_code like concat('%',#{userCode},'%')
	  	</if>
  	</sql>
  	
  	
  	<select id="fandUser" resultMap="UserResultMap" parameterType="UserInfo">
  			select 
		<include refid="User_Column_List"></include>
			from user_info
		<if test ="_parameter != null">
			<include refid ="user_Where_Clause"/>
		</if>
		
		
  	</select>
  	<select id="findUserAuth" parameterType="Map" resultMap="UserAuthResultMap" >
	  	select * from auth_info where auth_id in
			(select ua.auth_id from user_info ui,user_auth ua where 
				ui.`user_id`=ua.`user_id` and ui.`user_state`=1
				and ui.`is_delete`=0 and ui.`user_id`=1
			)
		and auth_state=1 and parent_id= #{parentId}
		
		union
		
		select * from auth_info where auth_id in
			(select auth_id from role_auth where role_id in
				(select ur.role_id from role r,user_role ur,user_info ui where 
					ur.user_id=ui.user_id and ur.role_id=r.role_id and ui.`user_state`=1 
					and ui.`is_delete`=0 and r.role_state=1
					and ui.user_id=   #{userId}
				)
			)
		and auth_state=1 AND parent_id=  #{parentId}
		
		union
		
		select * from auth_info where auth_id in
		(select auth_id from role_auth where role_id in
			(select gr.role_id FROM user_group ug,group_role gr,role r where 
				gr.group_id=ug.group_id and gr.role_id=r.role_id
			    and ug.group_state=1 and r.`role_state`=1
			    and ug.group_id=#{groupId}
			    )
		    )
		and auth_state=1 and parent_id= #{parentId}
  	
  	</select>
	
	<select id="fandAllUser"  resultMap="UserResultMap">
  			select * from user_info
		
  	</select>
  	<select id="selectUserAndrole"  parameterType="Map" resultMap="user-role-userGroup">
  		select ui.* ,ug.*,ro.*
  		from  user_info ui,user_group ug ,role ro  
		where ui.group_id=ug.group_id 
		and ro.role_id = ui.user_type
		and ui.is_delete=0  
		<include refid="page"></include>
       	limit #{page.limitIndex},#{page.pageSize}
	</select>
  	
  	<select id="FandUserAndrole" parameterType="UserInfo" resultMap="user-role-userGroup">
  		select ui.* ,ug.*,ro.*
  		from  user_info ui,user_group ug,role ro  
		where ui.group_id=ug.group_id 
		and ro.role_id = ui.user_type
		and ui.is_delete=0
		<include refid="allList"></include>
  	</select>
  	<update id="deleteUserById" parameterType="Integer">
		 update user_info set is_delete = 1  where	user_id = #{userId}
  	</update>
  	<update id="disabledUserById" parameterType="Integer">
		 update user_info set user_state = 0  where	user_id = #{userId}
  	</update>
	<update id="startUserById" parameterType="Integer">
		 update user_info set user_state = 1  where	user_id = #{userId}
  	</update>  
  	
  	<insert id="insertUser" parameterType="UserInfo">
  		insert into user_Info (group_id,nick_name,user_code,user_pwd,create_by) 
  		values(#{groupId},#{nickName},#{userCode},MD5(#{userPwd}),#{createBy})
  	</insert>
  	<update id="UpdateUserData" parameterType="UserInfo">
  		update user_info set group_id=#{groupId} ,nick_name =#{nickName} where user_id=#{userId}
  	</update>
  	<select id="SelectUserByName" resultMap="UserResultMap" parameterType="String">
  		select * from user_info where user_code=#{userCode}
  	</select>
  	<update id="ResetUserPwd">
  		update user_info set user_pwd =MD5("123456") where user_id =#{userId}
  	</update>
</mapper>