<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.auth.dao.RoleMapper">
  	<resultMap id="RoleResultMap" type="com.ssm.auth.vo.Role">
	    <id column="role_id" jdbcType="INTEGER" property="roleId" />
	    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
	    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
	    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
	    <result column="role_state" jdbcType="INTEGER" property="roleState" />
	    <result column="create_by" jdbcType="INTEGER" property="createBy" />
	    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
	    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  	</resultMap>
  	<sql id="Role_Column_List" >
    	role_id, role_name, role_desc, role_code, role_state, create_by, create_time, update_by, 
    	update_time
  	</sql>
  	
  	<select id="selectAllRole" resultMap="RoleResultMap">
  		select 
  		<include refid="Role_Column_List"></include>
  		from role   
  	</select>
  	
  	<select id="FandAllRole" parameterType="PageInfo" resultMap="RoleResultMap">
  		select 
  		<include refid="Role_Column_List"></include>
  		from role 
  		 limit #{limitIndex},#{pageSize}
  	</select>
  	
  	<select id="seleRoleIdByuserId" parameterType="Integer" resultType="Integer">
  		select role_id from user_role where user_id=#{userId}	
  	</select>
  	
  	<delete id="deleteUserRole" parameterType="Integer">
 		delete from user_role  where user_id =#{userId} 
  	</delete>
  	<insert id="insertUseRole" parameterType="UserRole">
  	 	insert into user_role (user_id,role_id) values (#{userId},#{roleId})
  	</insert>
</mapper>